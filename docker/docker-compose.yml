version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: production
    container_name: laravel-modular-ddd
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ../storage:/var/www/storage
      - ../modules:/var/www/modules
      - module_cache:/var/www/bootstrap/cache
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=database
      - DB_DATABASE=laravel_app
      - DB_USERNAME=laravel_user
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - MODULAR_DDD_MONITORING=true
    depends_on:
      - database
      - redis
    networks:
      - app-network
    ports:
      - "80:80"

  database:
    image: mysql:8.0
    container_name: laravel-database
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=laravel_app
      - MYSQL_USER=laravel_user
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - database_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:7.0-alpine
    container_name: laravel-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - app-network
    ports:
      - "6379:6379"
    command: redis-server /usr/local/etc/redis/redis.conf

  queue:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: production
    container_name: laravel-queue
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ../storage:/var/www/storage
      - ../modules:/var/www/modules
    environment:
      - APP_ENV=production
      - DB_HOST=database
      - REDIS_HOST=redis
    depends_on:
      - database
      - redis
    networks:
      - app-network
    command: php artisan queue:work --sleep=3 --tries=3

  scheduler:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: production
    container_name: laravel-scheduler
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ../storage:/var/www/storage
      - ../modules:/var/www/modules
    environment:
      - APP_ENV=production
      - DB_HOST=database
      - REDIS_HOST=redis
    depends_on:
      - database
      - redis
    networks:
      - app-network
    command: supercronic /var/www/docker/cron/laravel-cron

  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./nginx/prod.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl/certs
      - ../public:/var/www/public
    depends_on:
      - app
    networks:
      - app-network

  monitoring:
    image: prom/prometheus:latest
    container_name: laravel-monitoring
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: laravel-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - monitoring
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  database_data:
  redis_data:
  module_cache:
  prometheus_data:
  grafana_data: