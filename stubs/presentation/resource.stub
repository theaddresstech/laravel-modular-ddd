<?php

declare(strict_types=1);

namespace Modules\{{ module }}\Presentation\Http\Resources;

use Modules\{{ module }}\Domain\Models\{{ name }};
use Illuminate\Http\Request;
use Illuminate\Http\Resources\Json\JsonResource;

class {{ name }}Resource extends JsonResource
{
    public function __construct({{ name }} ${{ nameSnake }})
    {
        parent::__construct(${{ nameSnake }});
    }

    public function toArray(Request $request): array
    {
        /** @var {{ name }} ${{ nameSnake }} */
        ${{ nameSnake }} = $this->resource;

        return [
            'id' => ${{ nameSnake }}->getId()->toString(),
            'name' => ${{ nameSnake }}->getName(),
            'description' => ${{ nameSnake }}->getDescription(),
            'status' => ${{ nameSnake }}->getStatus(),
            'created_at' => ${{ nameSnake }}->getCreatedAt()->format('Y-m-d\TH:i:s.u\Z'),
            'updated_at' => ${{ nameSnake }}->getUpdatedAt()?->format('Y-m-d\TH:i:s.u\Z'),
            'links' => [
                'self' => route('api.{{ module_snake }}.{{ nameSnake }}s.show', ['{{ nameSnake }}' => ${{ nameSnake }}->getId()->toString()]),
                'edit' => route('api.{{ module_snake }}.{{ nameSnake }}s.update', ['{{ nameSnake }}' => ${{ nameSnake }}->getId()->toString()]),
                'delete' => route('api.{{ module_snake }}.{{ nameSnake }}s.destroy', ['{{ nameSnake }}' => ${{ nameSnake }}->getId()->toString()]),
            ],
        ];
    }

    public function with(Request $request): array
    {
        return [
            'meta' => [
                'version' => '1.0',
                'timestamp' => now()->toISOString(),
            ],
        ];
    }
}