<?php

declare(strict_types=1);

namespace {{NAMESPACE}}\Domain\Models;

use {{NAMESPACE}}\Domain\ValueObjects\{{AGGREGATE}}Id;
use TaiCrm\LaravelModularDdd\Foundation\AggregateRoot;

class {{AGGREGATE}} extends AggregateRoot
{
    public function __construct(
        private {{AGGREGATE}}Id $id,
        private string $name
    ) {
        parent::__construct();
    }

    public static function create({{AGGREGATE}}Id $id, string $name): self
    {
        $instance = new self($id, $name);

        // TODO: Create the event using: php artisan module:make-event {{MODULE}} {{AGGREGATE}}Created --aggregate={{AGGREGATE}}
        // $instance->apply({{AGGREGATE}}Created::raise($id->value(), $name));

        return $instance;
    }

    public function getId(): {{AGGREGATE}}Id
    {
        return $this->id;
    }

    public function getName(): string
    {
        return $this->name;
    }

    public function changeName(string $name): void
    {
        if ($this->name === $name) {
            return;
        }

        $this->name = $name;

        // TODO: Create the event using: php artisan module:make-event {{MODULE}} {{AGGREGATE}}NameChanged --aggregate={{AGGREGATE}}
        // $this->apply({{AGGREGATE}}NameChanged::raise($this->id->value(), $name));
    }
}